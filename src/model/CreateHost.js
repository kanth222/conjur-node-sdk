/**
 * Conjur
 * This is an API definition for CyberArk Conjur Open Source. You can find out more at [Conjur.org](https://www.conjur.org/).
 *
 * The version of the OpenAPI document: 5.3.1
 * Contact: conj_maintainers@cyberark.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateHost model module.
 * @module model/CreateHost
 * @version 5.3.1
 */
class CreateHost {
    /**
     * Constructs a new <code>CreateHost</code>.
     * Contains information about a created host
     * @alias module:model/CreateHost
     * @param annotations {Array.<String>} 
     * @param apiKey {String} 
     * @param createdAt {String} 
     * @param id {String} 
     * @param owner {String} 
     * @param permissions {Array.<String>} 
     */
    constructor(annotations, apiKey, createdAt, id, owner, permissions) { 
        
        CreateHost.initialize(this, annotations, apiKey, createdAt, id, owner, permissions);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, annotations, apiKey, createdAt, id, owner, permissions) { 
        obj['annotations'] = annotations;
        obj['api_key'] = apiKey;
        obj['created_at'] = createdAt;
        obj['id'] = id;
        obj['owner'] = owner;
        obj['permissions'] = permissions;
    }

    /**
     * Constructs a <code>CreateHost</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateHost} obj Optional instance to populate.
     * @return {module:model/CreateHost} The populated <code>CreateHost</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateHost();

            if (data.hasOwnProperty('annotations')) {
                obj['annotations'] = ApiClient.convertToType(data['annotations'], ['String']);
            }
            if (data.hasOwnProperty('api_key')) {
                obj['api_key'] = ApiClient.convertToType(data['api_key'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = ApiClient.convertToType(data['owner'], 'String');
            }
            if (data.hasOwnProperty('permissions')) {
                obj['permissions'] = ApiClient.convertToType(data['permissions'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<String>} annotations
 */
CreateHost.prototype['annotations'] = undefined;

/**
 * @member {String} api_key
 */
CreateHost.prototype['api_key'] = undefined;

/**
 * @member {String} created_at
 */
CreateHost.prototype['created_at'] = undefined;

/**
 * @member {String} id
 */
CreateHost.prototype['id'] = undefined;

/**
 * @member {String} owner
 */
CreateHost.prototype['owner'] = undefined;

/**
 * @member {Array.<String>} permissions
 */
CreateHost.prototype['permissions'] = undefined;






export default CreateHost;

