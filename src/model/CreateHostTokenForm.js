/**
 * Conjur
 * This is an API definition for CyberArk Conjur Open Source. You can find out more at [Conjur.org](https://www.conjur.org/).
 *
 * The version of the OpenAPI document: 5.3.1
 * Contact: conj_maintainers@cyberark.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateHostTokenForm model module.
 * @module model/CreateHostTokenForm
 * @version 5.3.1
 */
class CreateHostTokenForm {
    /**
     * Constructs a new <code>CreateHostTokenForm</code>.
     * @alias module:model/CreateHostTokenForm
     * @param expiration {String} `ISO 8601 datetime` denoting a requested expiration time.
     * @param hostFactory {String} Fully qualified host factory ID
     */
    constructor(expiration, hostFactory) { 
        
        CreateHostTokenForm.initialize(this, expiration, hostFactory);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, expiration, hostFactory) { 
        obj['expiration'] = expiration;
        obj['host_factory'] = hostFactory;
    }

    /**
     * Constructs a <code>CreateHostTokenForm</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateHostTokenForm} obj Optional instance to populate.
     * @return {module:model/CreateHostTokenForm} The populated <code>CreateHostTokenForm</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateHostTokenForm();

            if (data.hasOwnProperty('cidr')) {
                obj['cidr'] = ApiClient.convertToType(data['cidr'], ['String']);
            }
            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('expiration')) {
                obj['expiration'] = ApiClient.convertToType(data['expiration'], 'String');
            }
            if (data.hasOwnProperty('host_factory')) {
                obj['host_factory'] = ApiClient.convertToType(data['host_factory'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Number of host tokens to create
 * @member {Array.<String>} cidr
 */
CreateHostTokenForm.prototype['cidr'] = undefined;

/**
 * Number of host tokens to create
 * @member {Number} count
 */
CreateHostTokenForm.prototype['count'] = undefined;

/**
 * `ISO 8601 datetime` denoting a requested expiration time.
 * @member {String} expiration
 */
CreateHostTokenForm.prototype['expiration'] = undefined;

/**
 * Fully qualified host factory ID
 * @member {String} host_factory
 */
CreateHostTokenForm.prototype['host_factory'] = undefined;






export default CreateHostTokenForm;

